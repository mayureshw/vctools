# Do not forget to run "make clean" and "make" after any change to these
# options!

# For performance reason we use C++ STL Bitset, hence we fix the size
# of wide integers. All integer types > 64 bit map to WideUint of this size
WIDEUINTSZ	=	128

# CEP based verification tools are triggered if this option is set. See
# README.md of the ceptool for more details.
USECEP	=	n

# Data movements between datums are checked for type safety if this is enabled.
# For better performance keep this disabled. For testing after any major
# changes to vC simulator code this should be enabled.
DATUMDBG	=	n

# ----------  LOGGING OPTIONS ----------
#
# By default following logs are always kept enabled and they appear on stdout:
#
#   - Module entry and exit with input and output parameters respectively
#   - Writes to the system pipes
#
# There are separate log files for various aspects. All log files follow a
# terse format, such as : separated values, which makes it easy to analyze logs
# or write tools around them.
#
# If you want a high performance simulation keep all the logging options
# disabled. In favour of performance these options are made compile time
# options so that when they are disabled they don't cause any overhead.
#
# Choose y to enable logging option n to disable

# Pipe logging to file pipes.log: All push and pop operations are logged. Push
# on full and pop from empty are logged identidiably.
PIPEDBG	=	y

# Operator logging in file ops.log. On update-ack event, the inputs and outputs
# of an operator are logged. For certain operators that do not have update-ack,
# their sample-ack is logged.
OPDBG	=	y

# Petri net logging to file petri.log. Every transition, addition and deduction
# of tokens from every place and 'waiting transitions' are logged. For more
# details see README.md of the petrisimu package.
PNDBG	=	y

# Generate data path dot file for each module, with name <modulename>_CP.dot
GEN_CPDOT	=	n

# Generate data path dot file for each module, with name <modulename>.dot
GEN_DPDOT	=	n

# Generate Petri net dot file as petri.dot
GEN_PETRIDOT	=	n

# Generate json file representation of Petri net in petri.json
GEN_PETRIJSON	=	n

# Generate pnml representation of the Petri net in petri.pnml
GEN_PETRIPNML	=	n
